// +build minimal

#pragma once

#ifndef GO_QTCORE_H
#define GO_QTCORE_H

#include <stdint.h>

#ifdef __cplusplus
int QChildEvent_QChildEvent_QRegisterMetaType();
int QCoreApplication_QCoreApplication_QRegisterMetaType();
int QEvent_QEvent_QRegisterMetaType();
int QIODevice_QIODevice_QRegisterMetaType();
int QObject_QObject_QRegisterMetaType();
int QTimerEvent_QTimerEvent_QRegisterMetaType();
extern "C" {
#endif

struct QtCore_PackedString { char* data; long long len; void* ptr; };
struct QtCore_PackedList { void* data; long long len; };
void* QBitArray_NewQBitArray();
void* QBitArray_NewQBitArray4(void* other);
void* QBitArray_NewQBitArray3(void* other);
void* QBitArray_NewQBitArray2(int size, char value);
int QBitArray_Size(void* ptr);
void* QByteArray_Remove(void* ptr, int pos, int l);
void* QByteArray_Replace11(void* ptr, char* before, char* after);
void* QByteArray_Replace5(void* ptr, char* before, void* after);
void* QByteArray_Replace13(void* ptr, char* before, struct QtCore_PackedString after);
void* QByteArray_Replace4(void* ptr, char* before, char* after);
void* QByteArray_Replace8(void* ptr, void* before, void* after);
void* QByteArray_Replace9(void* ptr, void* before, char* after);
void* QByteArray_Replace14(void* ptr, struct QtCore_PackedString before, void* after);
void* QByteArray_Replace12(void* ptr, struct QtCore_PackedString before, char* after);
void* QByteArray_Replace10(void* ptr, char* before, void* after);
void* QByteArray_Replace6(void* ptr, char* before, char* after);
void* QByteArray_Replace7(void* ptr, char* before, int bsize, char* after, int asize);
void* QByteArray_Replace(void* ptr, int pos, int l, void* after);
void* QByteArray_Replace3(void* ptr, int pos, int l, char* after);
void* QByteArray_Replace2(void* ptr, int pos, int l, char* after, int alen);
void* QByteArray_NewQByteArray();
void* QByteArray_NewQByteArray6(void* other);
void* QByteArray_NewQByteArray5(void* other);
void* QByteArray_NewQByteArray2(char* data, int size);
void* QByteArray_NewQByteArray3(int size, char* ch);
struct QtCore_PackedString QByteArray_Data(void* ptr);
void QByteArray_DestroyQByteArray(void* ptr);
void* QByteArray_ToLower(void* ptr);
void* QByteArray_ToUpper(void* ptr);
struct QtCore_PackedList QByteArray_Split(void* ptr, char* sep);
char QByteArray_Contains3(void* ptr, char* ch);
char QByteArray_Contains(void* ptr, void* ba);
char QByteArray_Contains2(void* ptr, char* str);
struct QtCore_PackedString QByteArray_Data2(void* ptr);
int QByteArray_Length(void* ptr);
int QByteArray_Size(void* ptr);
void* QByteArray___split_atList(void* ptr, int i);
void QByteArray___split_setList(void* ptr, void* i);
void* QByteArray___split_newList(void* ptr);
void* QChar_NewQChar();
void* QChar_NewQChar8(void* ch);
void* QChar_NewQChar7(long long ch);
void* QChar_NewQChar9(char* ch);
void* QChar_NewQChar6(int code);
void* QChar_NewQChar4(short code);
void* QChar_NewQChar3(char* cell, char* row);
void* QChar_NewQChar10(char* ch);
void* QChar_NewQChar5(unsigned int code);
void* QChar_NewQChar2(unsigned short code);
unsigned int QChar_QChar_ToLower2(unsigned int ucs4);
unsigned int QChar_QChar_ToUpper2(unsigned int ucs4);
void* QChar_ToLower(void* ptr);
void* QChar_ToUpper(void* ptr);
void* QChildEvent_NewQChildEvent(long long ty, void* child);
void* QChildEvent_C(void* ptr);
void QChildEvent_SetC(void* ptr, void* vqo);
void* QCoreApplication_NewQCoreApplication(int argc, char* argv);
struct QtCore_PackedString QCoreApplication_QCoreApplication_Translate(char* context, char* sourceText, char* disambiguation, int n);
int QCoreApplication_QCoreApplication_Exec();
void QCoreApplication_QCoreApplication_Exit(int returnCode);
void QCoreApplication_DestroyQCoreApplication(void* ptr);
void* QDataStream_NewQDataStream();
void* QDataStream_NewQDataStream3(void* a, long long mode);
void* QDataStream_NewQDataStream2(void* d);
void* QDataStream_NewQDataStream4(void* a);
void QDataStream_DestroyQDataStream(void* ptr);
void* QDate_NewQDate();
void* QDate_NewQDate3(int y, int m, int d);
struct QtCore_PackedString QDate_ToString2(void* ptr, long long format);
struct QtCore_PackedString QDate_ToString(void* ptr, struct QtCore_PackedString format);
void* QDateTime_NewQDateTime();
void* QDateTime_NewQDateTime7(void* other);
void* QDateTime_NewQDateTime2(void* date);
void* QDateTime_NewQDateTime3(void* date, void* ti, long long spec);
void* QDateTime_NewQDateTime4(void* date, void* ti, long long spec, int offsetSeconds);
void* QDateTime_NewQDateTime5(void* date, void* ti, void* timeZone);
void* QDateTime_NewQDateTime6(void* other);
void QDateTime_DestroyQDateTime(void* ptr);
struct QtCore_PackedString QDateTime_ToString2(void* ptr, long long format);
struct QtCore_PackedString QDateTime_ToString(void* ptr, struct QtCore_PackedString format);
void* QDateTime_Time(void* ptr);
void* QEasingCurve_NewQEasingCurve3(void* other);
void* QEasingCurve_NewQEasingCurve(long long ty);
void* QEasingCurve_NewQEasingCurve2(void* other);
void QEasingCurve_DestroyQEasingCurve(void* ptr);
long long QEasingCurve_Type(void* ptr);
double QEasingCurve_Period(void* ptr);
void* QEasingCurve___cubicBezierSpline_atList(void* ptr, int i);
void QEasingCurve___cubicBezierSpline_setList(void* ptr, void* i);
void* QEasingCurve___cubicBezierSpline_newList(void* ptr);
void* QEasingCurve___toCubicSpline_atList(void* ptr, int i);
void QEasingCurve___toCubicSpline_setList(void* ptr, void* i);
void* QEasingCurve___toCubicSpline_newList(void* ptr);
void* QEvent_NewQEvent(long long ty);
void QEvent_DestroyQEvent(void* ptr);
void QEvent_DestroyQEventDefault(void* ptr);
long long QEvent_Type(void* ptr);
unsigned short QEvent_T(void* ptr);
void QEvent_SetT(void* ptr, unsigned short vus);
void* QIODevice_Read2(void* ptr, long long maxSize);
void* QIODevice_NewQIODevice2(void* parent);
void* QIODevice_NewQIODevice();
char QIODevice_Open(void* ptr, long long mode);
char QIODevice_OpenDefault(void* ptr, long long mode);
char QIODevice_Reset(void* ptr);
char QIODevice_ResetDefault(void* ptr);
long long QIODevice_Read(void* ptr, char* data, long long maxSize);
long long QIODevice_ReadData(void* ptr, char* data, long long maxSize);
long long QIODevice_Write3(void* ptr, void* byteArray);
long long QIODevice_Write2(void* ptr, char* data);
long long QIODevice_Write(void* ptr, char* data, long long maxSize);
long long QIODevice_WriteData(void* ptr, char* data, long long maxSize);
void QIODevice_Close(void* ptr);
void QIODevice_CloseDefault(void* ptr);
void QIODevice_DestroyQIODevice(void* ptr);
void QIODevice_DestroyQIODeviceDefault(void* ptr);
long long QIODevice_Pos(void* ptr);
long long QIODevice_PosDefault(void* ptr);
long long QIODevice_Size(void* ptr);
long long QIODevice_SizeDefault(void* ptr);
void* QJsonArray_NewQJsonArray();
void* QJsonArray_NewQJsonArray3(void* other);
void QJsonArray_Replace(void* ptr, int i, void* value);
void QJsonArray_DestroyQJsonArray(void* ptr);
void* QJsonArray_Last(void* ptr);
char QJsonArray_Contains(void* ptr, void* value);
char QJsonArray_Empty(void* ptr);
int QJsonArray_Size(void* ptr);
void* QJsonArray___fromVariantList_list_atList(void* ptr, int i);
void QJsonArray___fromVariantList_list_setList(void* ptr, void* i);
void* QJsonArray___fromVariantList_list_newList(void* ptr);
void* QJsonArray___toVariantList_atList(void* ptr, int i);
void QJsonArray___toVariantList_setList(void* ptr, void* i);
void* QJsonArray___toVariantList_newList(void* ptr);
void* QJsonDocument_NewQJsonDocument();
void* QJsonDocument_NewQJsonDocument3(void* array);
void* QJsonDocument_NewQJsonDocument4(void* other);
void* QJsonDocument_NewQJsonDocument2(void* object);
void QJsonDocument_SetObject(void* ptr, void* object);
void QJsonDocument_DestroyQJsonDocument(void* ptr);
void* QJsonDocument_ToJson(void* ptr, long long format);
void* QJsonDocument_Object(void* ptr);
void* QJsonDocument_ToVariant(void* ptr);
void* QJsonObject_NewQJsonObject();
void* QJsonObject_NewQJsonObject3(void* other);
void QJsonObject_Remove(void* ptr, struct QtCore_PackedString key);
void QJsonObject_DestroyQJsonObject(void* ptr);
void* QJsonObject_Value2(void* ptr, void* key);
void* QJsonObject_Value(void* ptr, struct QtCore_PackedString key);
struct QtCore_PackedString QJsonObject_Keys(void* ptr);
char QJsonObject_Contains2(void* ptr, void* key);
char QJsonObject_Contains(void* ptr, struct QtCore_PackedString key);
char QJsonObject_Empty(void* ptr);
int QJsonObject_Length(void* ptr);
int QJsonObject_Size(void* ptr);
void* QJsonObject___fromVariantHash_hash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___fromVariantHash_hash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___fromVariantHash_hash_newList(void* ptr);
struct QtCore_PackedList QJsonObject___fromVariantHash_hash_keyList(void* ptr);
void* QJsonObject___toVariantHash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___toVariantHash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___toVariantHash_newList(void* ptr);
struct QtCore_PackedList QJsonObject___toVariantHash_keyList(void* ptr);
void* QJsonObject___toVariantMap_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___toVariantMap_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___toVariantMap_newList(void* ptr);
struct QtCore_PackedList QJsonObject___toVariantMap_keyList(void* ptr);
struct QtCore_PackedString QJsonObject_____fromVariantHash_hash_keyList_atList(void* ptr, int i);
void QJsonObject_____fromVariantHash_hash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____fromVariantHash_hash_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____fromVariantMap_map_keyList_atList(void* ptr, int i);
void QJsonObject_____fromVariantMap_map_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____fromVariantMap_map_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____toVariantHash_keyList_atList(void* ptr, int i);
void QJsonObject_____toVariantHash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____toVariantHash_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____toVariantMap_keyList_atList(void* ptr, int i);
void QJsonObject_____toVariantMap_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____toVariantMap_keyList_newList(void* ptr);
void* QJsonValue_NewQJsonValue7(void* s);
void* QJsonValue_NewQJsonValue(long long ty);
void* QJsonValue_NewQJsonValue2(char b);
void* QJsonValue_NewQJsonValue9(void* a);
void* QJsonValue_NewQJsonValue10(void* o);
void* QJsonValue_NewQJsonValue11(void* other);
void* QJsonValue_NewQJsonValue6(struct QtCore_PackedString s);
void* QJsonValue_NewQJsonValue8(char* s);
void* QJsonValue_NewQJsonValue3(double n);
void* QJsonValue_NewQJsonValue4(int n);
void* QJsonValue_NewQJsonValue5(long long n);
void QJsonValue_DestroyQJsonValue(void* ptr);
struct QtCore_PackedString QJsonValue_ToString(void* ptr);
struct QtCore_PackedString QJsonValue_ToString2(void* ptr, struct QtCore_PackedString defaultValue);
void* QJsonValue_ToVariant(void* ptr);
long long QJsonValue_Type(void* ptr);
void* QLatin1Char_NewQLatin1Char(char* c);
void* QLatin1String_NewQLatin1String();
void* QLatin1String_NewQLatin1String4(void* str);
void* QLatin1String_NewQLatin1String2(char* str);
void* QLatin1String_NewQLatin1String3(char* str, int size);
struct QtCore_PackedString QLatin1String_Data(void* ptr);
int QLatin1String_Size(void* ptr);
void* QLine_NewQLine();
void* QLine_NewQLine2(void* p1, void* p2);
void* QLine_NewQLine3(int x1, int y1, int x2, int y2);
void QLine_Translate(void* ptr, void* offset);
void QLine_Translate2(void* ptr, int dx, int dy);
void* QLineF_NewQLineF();
void* QLineF_NewQLineF4(void* line);
void* QLineF_NewQLineF2(void* p1, void* p2);
void* QLineF_NewQLineF3(double x1, double y1, double x2, double y2);
void QLineF_Translate(void* ptr, void* offset);
void QLineF_Translate2(void* ptr, double dx, double dy);
double QLineF_Length(void* ptr);
void* QLocale_QLocale_C();
void* QLocale_NewQLocale();
void* QLocale_NewQLocale3(long long language, long long country);
void* QLocale_NewQLocale4(long long language, long long scri, long long country);
void* QLocale_NewQLocale5(void* other);
void* QLocale_NewQLocale2(struct QtCore_PackedString name);
void QLocale_DestroyQLocale(void* ptr);
struct QtCore_PackedString QLocale_Name(void* ptr);
struct QtCore_PackedString QLocale_ToLower(void* ptr, struct QtCore_PackedString str);
struct QtCore_PackedString QLocale_ToString10(void* ptr, void* date, long long format);
struct QtCore_PackedString QLocale_ToString9(void* ptr, void* date, struct QtCore_PackedString format);
struct QtCore_PackedString QLocale_ToString13(void* ptr, void* dateTime, long long format);
struct QtCore_PackedString QLocale_ToString14(void* ptr, void* dateTime, struct QtCore_PackedString format);
struct QtCore_PackedString QLocale_ToString12(void* ptr, void* ti, long long format);
struct QtCore_PackedString QLocale_ToString11(void* ptr, void* ti, struct QtCore_PackedString format);
struct QtCore_PackedString QLocale_ToString7(void* ptr, double i, char* ff, int prec);
struct QtCore_PackedString QLocale_ToString8(void* ptr, float i, char* ff, int prec);
struct QtCore_PackedString QLocale_ToString5(void* ptr, int i);
struct QtCore_PackedString QLocale_ToString(void* ptr, long long i);
struct QtCore_PackedString QLocale_ToString2(void* ptr, unsigned long long i);
struct QtCore_PackedString QLocale_ToString3(void* ptr, short i);
struct QtCore_PackedString QLocale_ToString6(void* ptr, unsigned int i);
struct QtCore_PackedString QLocale_ToString4(void* ptr, unsigned short i);
struct QtCore_PackedString QLocale_ToUpper(void* ptr, struct QtCore_PackedString str);
void* QLocale___matchingLocales_atList(void* ptr, int i);
void QLocale___matchingLocales_setList(void* ptr, void* i);
void* QLocale___matchingLocales_newList(void* ptr);
long long QLocale___weekdays_atList(void* ptr, int i);
void QLocale___weekdays_setList(void* ptr, long long i);
void* QLocale___weekdays_newList(void* ptr);
void* QMargins_NewQMargins();
void* QMargins_NewQMargins2(int left, int top, int right, int bottom);
void* QMetaMethod_Name(void* ptr);
void* QMetaMethod___parameterNames_atList(void* ptr, int i);
void QMetaMethod___parameterNames_setList(void* ptr, void* i);
void* QMetaMethod___parameterNames_newList(void* ptr);
void* QMetaMethod___parameterTypes_atList(void* ptr, int i);
void QMetaMethod___parameterTypes_setList(void* ptr, void* i);
void* QMetaMethod___parameterTypes_newList(void* ptr);
void* QMetaObject_Constructor(void* ptr, int index);
void* QMetaObject_Method(void* ptr, int index);
struct QtCore_PackedString QMetaObject_ClassName(void* ptr);
void* QModelIndex_NewQModelIndex();
void* QModelIndex_Data(void* ptr, int role);
void* QObject_NewQObject(void* parent);
struct QtCore_PackedString QObject_QObject_Tr(char* sourceText, char* disambiguation, int n);
void QObject_ConnectDestroyed(void* ptr, long long t);
void QObject_DisconnectDestroyed(void* ptr);
void QObject_Destroyed(void* ptr, void* obj);
void QObject_ConnectObjectNameChanged(void* ptr, long long t);
void QObject_DisconnectObjectNameChanged(void* ptr);
void QObject_SetObjectName(void* ptr, struct QtCore_PackedString name);
void QObject_DestroyQObject(void* ptr);
void QObject_DestroyQObjectDefault(void* ptr);
struct QtCore_PackedString QObject_ObjectName(void* ptr);
void* QObject_ToVariant(void* ptr);
void* QObject___dynamicPropertyNames_atList(void* ptr, int i);
void QObject___dynamicPropertyNames_setList(void* ptr, void* i);
void* QObject___dynamicPropertyNames_newList(void* ptr);
void* QObject___findChildren_atList2(void* ptr, int i);
void QObject___findChildren_setList2(void* ptr, void* i);
void* QObject___findChildren_newList2(void* ptr);
void* QObject___findChildren_atList3(void* ptr, int i);
void QObject___findChildren_setList3(void* ptr, void* i);
void* QObject___findChildren_newList3(void* ptr);
void* QObject___findChildren_atList(void* ptr, int i);
void QObject___findChildren_setList(void* ptr, void* i);
void* QObject___findChildren_newList(void* ptr);
void* QObject___children_atList(void* ptr, int i);
void QObject___children_setList(void* ptr, void* i);
void* QObject___children_newList(void* ptr);
void* QPersistentModelIndex_NewQPersistentModelIndex4(void* other);
void* QPersistentModelIndex_NewQPersistentModelIndex(void* index);
void* QPersistentModelIndex_NewQPersistentModelIndex3(void* other);
void* QPersistentModelIndex_Data(void* ptr, int role);
void* QPoint_NewQPoint();
void* QPoint_NewQPoint2(int xpos, int ypos);
int QPoint_X(void* ptr);
int QPoint_Y(void* ptr);
void* QPointF_NewQPointF();
void* QPointF_NewQPointF2(void* point);
void* QPointF_NewQPointF3(double xpos, double ypos);
double QPointF_X(void* ptr);
double QPointF_Y(void* ptr);
void* QRect_NewQRect();
void* QRect_NewQRect2(void* topLeft, void* bottomRight);
void* QRect_NewQRect3(void* topLeft, void* size);
void* QRect_NewQRect4(int x, int y, int width, int height);
void QRect_Translate2(void* ptr, void* offset);
void QRect_Translate(void* ptr, int dx, int dy);
void* QRect_Size(void* ptr);
char QRect_Contains(void* ptr, void* point, char proper);
char QRect_Contains2(void* ptr, void* rectangle, char proper);
char QRect_Contains3(void* ptr, int x, int y);
char QRect_Contains4(void* ptr, int x, int y, char proper);
int QRect_X(void* ptr);
int QRect_Y(void* ptr);
void* QRectF_NewQRectF();
void* QRectF_NewQRectF3(void* topLeft, void* bottomRight);
void* QRectF_NewQRectF2(void* topLeft, void* size);
void* QRectF_NewQRectF5(void* rectangle);
void* QRectF_NewQRectF4(double x, double y, double width, double height);
void QRectF_Translate2(void* ptr, void* offset);
void QRectF_Translate(void* ptr, double dx, double dy);
void* QRectF_Size(void* ptr);
char QRectF_Contains(void* ptr, void* point);
char QRectF_Contains2(void* ptr, void* rectangle);
char QRectF_Contains3(void* ptr, double x, double y);
double QRectF_X(void* ptr);
double QRectF_Y(void* ptr);
void* QRegExp_NewQRegExp();
void* QRegExp_NewQRegExp3(void* rx);
void* QRegExp_NewQRegExp2(struct QtCore_PackedString pattern, long long cs, long long syntax);
void QRegExp_DestroyQRegExp(void* ptr);
int QRegExp_Pos(void* ptr, int nth);
void* QRegularExpression_NewQRegularExpression();
void* QRegularExpression_NewQRegularExpression3(void* re);
void* QRegularExpression_NewQRegularExpression2(struct QtCore_PackedString pattern, long long options);
void QRegularExpression_DestroyQRegularExpression(void* ptr);
void* QRegularExpressionMatch_NewQRegularExpressionMatch();
void* QRegularExpressionMatch_NewQRegularExpressionMatch2(void* match);
void QRegularExpressionMatch_DestroyQRegularExpressionMatch(void* ptr);
void* QSize_NewQSize();
void* QSize_NewQSize2(int width, int height);
void* QSizeF_NewQSizeF();
void* QSizeF_NewQSizeF2(void* size);
void* QSizeF_NewQSizeF3(double width, double height);
void* QStringRef_NewQStringRef();
void* QStringRef_NewQStringRef5(void* other);
void* QStringRef_NewQStringRef3(struct QtCore_PackedString stri);
void* QStringRef_NewQStringRef2(struct QtCore_PackedString stri, int position, int length);
void* QStringRef_NewQStringRef4(void* other);
void QStringRef_DestroyQStringRef(void* ptr);
struct QtCore_PackedString QStringRef_ToString(void* ptr);
struct QtCore_PackedList QStringRef_Split2(void* ptr, void* sep, long long behavior, long long cs);
struct QtCore_PackedList QStringRef_Split(void* ptr, struct QtCore_PackedString sep, long long behavior, long long cs);
char QStringRef_Contains2(void* ptr, void* ch, long long cs);
char QStringRef_Contains3(void* ptr, void* str, long long cs);
char QStringRef_Contains(void* ptr, struct QtCore_PackedString str, long long cs);
char QStringRef_Contains4(void* ptr, void* str, long long cs);
void* QStringRef_Data(void* ptr);
struct QtCore_PackedString QStringRef_String(void* ptr);
int QStringRef_Length(void* ptr);
int QStringRef_Position(void* ptr);
int QStringRef_Size(void* ptr);
void* QStringRef___split_atList2(void* ptr, int i);
void QStringRef___split_setList2(void* ptr, void* i);
void* QStringRef___split_newList2(void* ptr);
void* QStringRef___split_atList(void* ptr, int i);
void QStringRef___split_setList(void* ptr, void* i);
void* QStringRef___split_newList(void* ptr);
unsigned int QStringRef___toUcs4_atList(void* ptr, int i);
void QStringRef___toUcs4_setList(void* ptr, unsigned int i);
void* QStringRef___toUcs4_newList(void* ptr);
int QSysInfo_WordSize_Type();
void* QTime_NewQTime();
void* QTime_NewQTime3(int h, int m, int s, int ms);
void QTime_Start(void* ptr);
struct QtCore_PackedString QTime_ToString2(void* ptr, long long format);
struct QtCore_PackedString QTime_ToString(void* ptr, struct QtCore_PackedString format);
int QTime_Second(void* ptr);
void* QTimeZone_NewQTimeZone();
void* QTimeZone_NewQTimeZone2(void* ianaId);
void* QTimeZone_NewQTimeZone4(void* ianaId, int offsetSeconds, struct QtCore_PackedString name, struct QtCore_PackedString abbreviation, long long country, struct QtCore_PackedString comment);
void* QTimeZone_NewQTimeZone5(void* other);
void* QTimeZone_NewQTimeZone3(int offsetSeconds);
void QTimeZone_DestroyQTimeZone(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList2(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList2(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList2(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList3(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList3(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList3(void* ptr);
void* QTimeZone___windowsIdToIanaIds_atList(void* ptr, int i);
void QTimeZone___windowsIdToIanaIds_setList(void* ptr, void* i);
void* QTimeZone___windowsIdToIanaIds_newList(void* ptr);
void* QTimeZone___windowsIdToIanaIds_atList2(void* ptr, int i);
void QTimeZone___windowsIdToIanaIds_setList2(void* ptr, void* i);
void* QTimeZone___windowsIdToIanaIds_newList2(void* ptr);
void* QTimerEvent_NewQTimerEvent(int timerId);
void* QUrl_NewQUrl();
void* QUrl_NewQUrl4(void* other);
void* QUrl_NewQUrl3(struct QtCore_PackedString url, long long parsingMode);
void* QUrl_NewQUrl2(void* other);
void QUrl_DestroyQUrl(void* ptr);
struct QtCore_PackedString QUrl_Path(void* ptr, long long options);
struct QtCore_PackedString QUrl_ToString(void* ptr, long long options);
struct QtCore_PackedString QUrl_Url(void* ptr, long long options);
void* QUrl___fromStringList_atList(void* ptr, int i);
void QUrl___fromStringList_setList(void* ptr, void* i);
void* QUrl___fromStringList_newList(void* ptr);
void* QUrl___toStringList_urls_atList(void* ptr, int i);
void QUrl___toStringList_urls_setList(void* ptr, void* i);
void* QUrl___toStringList_urls_newList(void* ptr);
void* QUrl___allEncodedQueryItemValues_atList(void* ptr, int i);
void QUrl___allEncodedQueryItemValues_setList(void* ptr, void* i);
void* QUrl___allEncodedQueryItemValues_newList(void* ptr);
void* QUuid_NewQUuid();
void* QUuid_NewQUuid5(void* text);
void* QUuid_NewQUuid3(struct QtCore_PackedString text);
void* QUuid_NewQUuid2(unsigned int l, unsigned short w1, unsigned short w2, char* b1, char* b2, char* b3, char* b4, char* b5, char* b6, char* b7, char* b8);
struct QtCore_PackedString QUuid_ToString(void* ptr);
void* QVariant_NewQVariant20(void* c);
void* QVariant_NewQVariant();
void* QVariant_NewQVariant6(void* s);
void* QVariant_NewQVariant18(void* val);
void* QVariant_NewQVariant47(void* other);
void* QVariant_NewQVariant2(long long ty);
void* QVariant_NewQVariant11(char val);
void* QVariant_NewQVariant16(void* val);
void* QVariant_NewQVariant15(void* val);
void* QVariant_NewQVariant21(void* val);
void* QVariant_NewQVariant23(void* val);
void* QVariant_NewQVariant39(void* val);
void* QVariant_NewQVariant26(void* val);
void* QVariant_NewQVariant45(void* val);
void* QVariant_NewQVariant46(void* val);
void* QVariant_NewQVariant44(void* val);
void* QVariant_NewQVariant43(void* val);
void* QVariant_NewQVariant31(void* val);
void* QVariant_NewQVariant32(void* val);
void* QVariant_NewQVariant24(void* val);
void* QVariant_NewQVariant35(void* l);
void* QVariant_NewQVariant25(void* val);
void* QVariant_NewQVariant41(void* val);
void* QVariant_NewQVariant42(void* val);
void* QVariant_NewQVariant29(void* val);
void* QVariant_NewQVariant30(void* val);
void* QVariant_NewQVariant33(void* val);
void* QVariant_NewQVariant34(void* val);
void* QVariant_NewQVariant36(void* regExp);
void* QVariant_NewQVariant37(void* re);
void* QVariant_NewQVariant27(void* val);
void* QVariant_NewQVariant28(void* val);
void* QVariant_NewQVariant17(struct QtCore_PackedString val);
void* QVariant_NewQVariant19(struct QtCore_PackedString val);
void* QVariant_NewQVariant22(void* val);
void* QVariant_NewQVariant38(void* val);
void* QVariant_NewQVariant40(void* val);
void* QVariant_NewQVariant5(void* p);
void* QVariant_NewQVariant14(char* val);
void* QVariant_NewQVariant12(double val);
void* QVariant_NewQVariant13(float val);
void* QVariant_NewQVariant3(int typeId, void* copy);
void* QVariant_NewQVariant7(int val);
void* QVariant_NewQVariant9(long long val);
void* QVariant_NewQVariant10(unsigned long long val);
void* QVariant_NewQVariant8(unsigned int val);
char QVariant_Convert(void* ptr, int targetTypeId);
void QVariant_DestroyQVariant(void* ptr);
struct QtCore_PackedList QVariant_ToHash(void* ptr);
struct QtCore_PackedList QVariant_ToList(void* ptr);
struct QtCore_PackedList QVariant_ToMap(void* ptr);
struct QtCore_PackedString QVariant_ToString(void* ptr);
struct QtCore_PackedString QVariant_ToStringList(void* ptr);
long long QVariant_Type(void* ptr);
char QVariant_CanConvert(void* ptr, int targetTypeId);
char QVariant_IsNull(void* ptr);
char QVariant_IsValid(void* ptr);
char QVariant_ToBool(void* ptr);
double QVariant_ToDouble(void* ptr, char* ok);
int QVariant_ToInt(void* ptr, char* ok);
long long QVariant_ToLongLong(void* ptr, char* ok);
unsigned long long QVariant_ToULongLong(void* ptr, char* ok);
unsigned int QVariant_ToUInt(void* ptr, char* ok);
void* QVariant___QVariant_val_atList26(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___QVariant_val_setList26(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___QVariant_val_newList26(void* ptr);
struct QtCore_PackedList QVariant___QVariant_val_keyList26(void* ptr);
void* QVariant___QVariant_val_atList24(void* ptr, int i);
void QVariant___QVariant_val_setList24(void* ptr, void* i);
void* QVariant___QVariant_val_newList24(void* ptr);
void* QVariant___QVariant_val_atList25(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___QVariant_val_setList25(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___QVariant_val_newList25(void* ptr);
struct QtCore_PackedList QVariant___QVariant_val_keyList25(void* ptr);
void* QVariant___toHash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___toHash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___toHash_newList(void* ptr);
struct QtCore_PackedList QVariant___toHash_keyList(void* ptr);
void* QVariant___toList_atList(void* ptr, int i);
void QVariant___toList_setList(void* ptr, void* i);
void* QVariant___toList_newList(void* ptr);
void* QVariant___toMap_atList(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___toMap_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___toMap_newList(void* ptr);
struct QtCore_PackedList QVariant___toMap_keyList(void* ptr);
struct QtCore_PackedString QVariant_____QVariant_val_keyList_atList26(void* ptr, int i);
void QVariant_____QVariant_val_keyList_setList26(void* ptr, struct QtCore_PackedString i);
void* QVariant_____QVariant_val_keyList_newList26(void* ptr);
struct QtCore_PackedString QVariant_____QVariant_val_keyList_atList25(void* ptr, int i);
void QVariant_____QVariant_val_keyList_setList25(void* ptr, struct QtCore_PackedString i);
void* QVariant_____QVariant_val_keyList_newList25(void* ptr);
struct QtCore_PackedString QVariant_____toHash_keyList_atList(void* ptr, int i);
void QVariant_____toHash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QVariant_____toHash_keyList_newList(void* ptr);
struct QtCore_PackedString QVariant_____toMap_keyList_atList(void* ptr, int i);
void QVariant_____toMap_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QVariant_____toMap_keyList_newList(void* ptr);
int Qt_LocaleDate_Type();
int Qt_SystemLocaleShortDate_Type();
int Qt_SystemLocaleLongDate_Type();
int Qt_DefaultLocaleShortDate_Type();
int Qt_DefaultLocaleLongDate_Type();
int Qt_RFC2822Date_Type();
int Qt_ISODateWithMs_Type();
int Qt_LastGestureType_Type();

#ifdef __cplusplus
}
#endif

#endif